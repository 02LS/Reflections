7. When would you want to use a remote repository rather than keeping all your work local?
If you were working on a project with others, having a cloud save would be useful so each member of the team would be up to date. It is also a good way to prevent data loss, if the local machine is destroyed, then the cloud save can replace the files.

10. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
This allows files that are being changed on the local machine not be online. Maybe an experimental change is being tested on the local machine that you don't want to be made public, or it might save and upload while you are in the middle of writings code. If it was an automatic upload, these would be problems. 

14. Describe the differences between forks, clones, and branches. When would you use one instead of another? A fork is like cloning a repository, only that it is on Github's servers. Cloning a repositroy means that you download it onto your local machine, not copy it on Github's servers. A branch is a different well... branch of a repository. It has all the files from before the branch was formed, and the files that are currently in the branch. A branch must be made from either another branch or the master branch. You would use forking when you want to copy another repository but not make changes to the main repository, but want to keep it on Github. You would clone a repository if you dont want to copy it and leave it on Github. You would make a branch when you want to make an experimental change, but not create and entire new repository.

22. What is the benefit of having a copy of the last known state of the remote stored locally? 
You would be able to work on the latest state offline, allowing you to not get behind during say... a group project. 